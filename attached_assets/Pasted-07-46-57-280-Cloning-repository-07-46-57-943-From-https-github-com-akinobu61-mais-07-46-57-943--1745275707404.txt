07:46:57.280	Cloning repository...
07:46:57.943	From https://github.com/akinobu61/mais
07:46:57.943	 * branch            59f4a74903567fd0d8d0e5a83fcbb0659f50bfa8 -> FETCH_HEAD
07:46:57.943	
07:46:57.975	HEAD is now at 59f4a74 Improve URL handling to prevent issues with special URL schemes
07:46:57.975	
07:46:58.055	
07:46:58.055	Using v2 root directory strategy
07:46:58.077	Success: Finished cloning repository files
07:46:59.820	Checking for configuration in a Wrangler configuration file (BETA)
07:46:59.821	
07:47:00.929	No wrangler.toml file found. Continuing.
07:47:00.995	Detected the following tools from environment: pip@23.2.1, python@3.11.5
07:47:00.997	Installing project dependencies: pip install .
07:47:02.133	Processing /opt/buildhome/repo
07:47:02.136	  Installing build dependencies: started
07:47:03.889	  Installing build dependencies: finished with status 'done'
07:47:03.890	  Getting requirements to build wheel: started
07:47:04.161	  Getting requirements to build wheel: finished with status 'error'
07:47:04.166	  error: subprocess-exited-with-error
07:47:04.166	  
07:47:04.166	  × Getting requirements to build wheel did not run successfully.
07:47:04.166	  │ exit code: 1
07:47:04.167	  ╰─> [14 lines of output]
07:47:04.167	      error: Multiple top-level packages discovered in a flat-layout: ['static', 'templates', 'attached_assets'].
07:47:04.167	      
07:47:04.167	      To avoid accidental inclusion of unwanted files or directories,
07:47:04.167	      setuptools will not proceed with this build.
07:47:04.167	      
07:47:04.167	      If you are trying to create a single distribution with multiple packages
07:47:04.167	      on purpose, you should not rely on automatic discovery.
07:47:04.168	      Instead, consider the following options:
07:47:04.168	      
07:47:04.168	      1. set up custom discovery (`find` directive with `include` or `exclude`)
07:47:04.168	      2. use a `src-layout`
07:47:04.168	      3. explicitly set `py_modules` or `packages` with a list of names
07:47:04.168	      
07:47:04.168	      To find more information, look for "package discovery" on setuptools docs.
07:47:04.168	      [end of output]
07:47:04.168	  
07:47:04.168	  note: This error originates from a subprocess, and is likely not a problem with pip.
07:47:04.286	error: subprocess-exited-with-error
07:47:04.286	
07:47:04.286	× Getting requirements to build wheel did not run successfully.
07:47:04.286	│ exit code: 1
07:47:04.286	╰─> See above for output.
07:47:04.286	
07:47:04.286	note: This error originates from a subprocess, and is likely not a problem with pip.
07:47:04.363	Error: Exit with error code: 1
07:47:04.363	    at ChildProcess.<anonymous> (/snapshot/dist/run-build.js)
07:47:04.363	    at Object.onceWrapper (node:events:652:26)
07:47:04.363	    at ChildProcess.emit (node:events:537:28)
07:47:04.363	    at ChildProcess._handle.onexit (node:internal/child_process:291:12)
07:47:04.373	Failed: build command exited with code: 1
07:47:05.476	Failed: error occurred while running build command

## 原因

`pip install .`や`python -m build`で「error: Multiple top-level packages discovered in a flat-layout: ['static', 'templates', 'attached_assets']」というエラーが発生しています。  
これは、**プロジェクトルート直下に複数のディレクトリ（static, templates, attached_assets など）が存在し、setuptoolsの自動パッケージ検出がどれをPythonパッケージとして扱うべきか判断できない**ためです[3][6][8]。

## 解決方法

### 1. `pyproject.toml`で`packages`を明示的に指定

`pyproject.toml`の`[tool.setuptools]`セクションで、**本当にパッケージとして配布したいディレクトリのみ**を列挙してください。  
たとえば、`main.py`や`app.py`などのPythonコードが`mais`ディレクトリ下にある場合は、次のようにします。

```toml
[tool.setuptools]
packages = ["mais"]
```

もし`mais`ディレクトリがなく、`main.py`などの単一ファイルを配布したい場合は、`py-modules`を使います。

```toml
[tool.setuptools]
py-modules = ["main", "app", "models", "proxy_utils", "content_processor", "url_crypto", "url_encoder_colab"]
```

### 2. 静的ファイル/テンプレートディレクトリを除外

`static`, `templates`, `attached_assets`などは**Pythonパッケージではない**ので、`packages`や`py-modules`に含めないでください[3][6][9]。

### 3. `src`レイアウトの利用（推奨）

今後のメンテナンス性を考えると、`src`ディレクトリを作り、その下にPythonパッケージをまとめる方法も推奨されます[3][6]。

```
project-root/
├── src/
│   └── mais/
│       └── __init__.py
├── static/
├── templates/
├── attached_assets/
├── pyproject.toml
```
この場合は
```toml
[tool.setuptools.packages.find]
where = ["src"]
```
のように指定します。

## まとめ

- `pyproject.toml`の`[tool.setuptools]`で**配布対象のパッケージやモジュールを明示的に指定**することでエラーが解消します[2][3][6]。
- 静的ファイルやテンプレートディレクトリは**Pythonパッケージとして扱わない**ようにします。

---

**参考例:**

```toml
[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = ["main", "app", "models", "proxy_utils", "content_processor", "url_crypto", "url_encoder_colab"]
```

これで`pip install .`や`python -m build`が正常に動作するはずです[2][3][6][8]。

引用:
[1] GitHub - akinobu61/mais https://github.com/akinobu61/mais
[2] `error: Multiple top-level packages discovered in a flat-layout` · Issue ... https://github.com/pypa/build/issues/611
[3] Multiple top-level packages discovered in a flat-layout - Stack Overflow https://stackoverflow.com/questions/72294299/multiple-top-level-packages-discovered-in-a-flat-layout
[4] [Bug] error: Multiple top-level packages discovered in a flat-layout ... https://github.com/mlc-ai/mlc-llm/issues/2708
[5] Trouble using setuptools with only a pyproject.toml file - Python Help https://discuss.python.org/t/trouble-using-setuptools-with-only-a-pyproject-toml-file/48655
[6] Using pip-tools with pyproject.toml and setuptools - Keith R. Petersen https://www.keithrpetersen.com/blog/pip-tools-pyproject-toml-setuptools/
[7] How can I build jupyter source code to wheel? - Notebook https://discourse.jupyter.org/t/how-can-i-build-jupyter-source-code-to-wheel/27608
[8] error: Multiple top-level packages discovered in a flat-layout http://specialistoff.net/question/1288
[9] 836599 – dev-python/symengine-0.9.2 - error: Multiple top-level ... https://bugs.gentoo.org/836599
[10] Package Discovery and Namespace Packages - Setuptools https://setuptools.pypa.io/en/latest/userguide/package_discovery.html
